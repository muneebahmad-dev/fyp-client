{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/muneeb/fyp-client/screens/Auth/ForgotPassword.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport logo from \"../../assets/photo-white.png\";\n\nvar ForgotPasswordScreen = function ForgotPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isLoading = _useState6[0],\n      setIsLoading = _useState6[1];\n\n  var forgotPasswordApi = function forgotPasswordApi() {\n    var response, responseJson;\n    return _regeneratorRuntime.async(function forgotPasswordApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"http://e-photocopier-server.herokuapp.com/api/user/forgotPassword\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: email\n              })\n            }));\n\n          case 4:\n            response = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            responseJson = _context.sent;\n            console.log(responseJson);\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            setError(_context.t0);\n            console.log(_context.t0);\n\n          case 15:\n            setIsLoading(false);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 11]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: logo,\n    style: {\n      width: 305,\n      height: 159\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.btnview,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Email\",\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(e) {\n      setEmail(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, error)), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: forgotPasswordApi,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.btn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \" Send Password \")), React.createElement(ActivityIndicator, {\n    animating: isLoading,\n    size: \"large\",\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ForgotPasswordScreen;\nvar styles = StyleSheet.create({\n  input: {\n    height: 50,\n    width: 300,\n    borderRadius: 5,\n    color: \"white\",\n    borderBottomColor: \"white\",\n    borderBottomWidth: 1,\n    justifyContent: \"center\"\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#2291FF\",\n    marginTop: \"-40%\"\n  },\n  headers: {\n    fontSize: 34,\n    color: \"white\",\n    fontWeight: \"bold\",\n    marginBottom: \"6%\"\n  },\n  signupbtn: {\n    color: \"#2291FF\",\n    fontWeight: \"bold\"\n  },\n  acc: {\n    marginTop: 100,\n    fontSize: 20,\n    color: \"white\",\n    fontWeight: \"bold\",\n    marginBottom: \"4%\"\n  },\n  btnview: {\n    marginTop: \"20%\"\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    marginTop: \"7%\",\n    padding: 9,\n    paddingLeft: 20,\n    paddingRight: 20,\n    borderRadius: 5,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    elevation: 7\n  },\n  btn: {\n    color: \"#2291FF\",\n    fontWeight: \"bold\",\n    paddingHorizontal: \"10%\"\n  }\n});","map":{"version":3,"sources":["/home/muneeb/fyp-client/screens/Auth/ForgotPassword.js"],"names":["React","useState","logo","ForgotPasswordScreen","navigation","email","setEmail","error","setError","isLoading","setIsLoading","forgotPasswordApi","fetch","method","headers","body","JSON","stringify","response","json","responseJson","console","log","styles","container","width","height","btnview","input","e","button","btn","StyleSheet","create","borderRadius","color","borderBottomColor","borderBottomWidth","justifyContent","flex","alignItems","backgroundColor","marginTop","fontSize","fontWeight","marginBottom","signupbtn","acc","padding","paddingLeft","paddingRight","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Button,\n  TextInput,\n  StyleSheet,\n  Text,\n  Image,\n  TouchableOpacity,\n  ActivityIndicator,\n} from \"react-native\";\nimport logo from \"../../assets/photo-white.png\";\n\nconst ForgotPasswordScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const forgotPasswordApi = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(\n        \"http://e-photocopier-server.herokuapp.com/api/user/forgotPassword\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email }),\n        }\n      );\n      const responseJson = await response.json();\n      console.log(responseJson);\n    } catch (err) {\n      setError(err);\n      console.log(err);\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image source={logo} style={{ width: 305, height: 159 }} />\n      <View style={styles.btnview}>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Email\"\n          autoCapitalize=\"none\"\n          placeholderTextColor=\"white\"\n          onChangeText={(e) => {\n            setEmail(e);\n          }}\n        />\n        <Text>{error}</Text>\n      </View>\n      <TouchableOpacity style={styles.button} onPress={forgotPasswordApi}>\n        <Text style={styles.btn}> Send Password </Text>\n      </TouchableOpacity>\n      <ActivityIndicator animating={isLoading} size=\"large\" color=\"white\" />\n    </View>\n  );\n};\n\nexport default ForgotPasswordScreen;\n\nconst styles = StyleSheet.create({\n  input: {\n    height: 50,\n    width: 300,\n    borderRadius: 5,\n    color: \"white\",\n    borderBottomColor: \"white\",\n    borderBottomWidth: 1,\n    justifyContent: \"center\",\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#2291FF\",\n    marginTop: \"-40%\",\n  },\n  headers: {\n    fontSize: 34,\n    color: \"white\",\n    fontWeight: \"bold\",\n    marginBottom: \"6%\",\n  },\n  signupbtn: {\n    color: \"#2291FF\",\n    fontWeight: \"bold\",\n  },\n  acc: {\n    marginTop: 100,\n    fontSize: 20,\n    color: \"white\",\n    fontWeight: \"bold\",\n    marginBottom: \"4%\",\n  },\n  btnview: {\n    marginTop: \"20%\",\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n    marginTop: \"7%\",\n    padding: 9,\n    paddingLeft: 20,\n    paddingRight: 20,\n    borderRadius: 5,\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.8,\n    shadowRadius: 2,\n    elevation: 7,\n  },\n  btn: {\n    color: \"#2291FF\",\n    fontWeight: \"bold\",\n    paddingHorizontal: \"10%\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}