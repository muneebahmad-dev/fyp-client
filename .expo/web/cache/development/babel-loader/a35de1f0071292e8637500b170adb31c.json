{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/muneeb/E-Photocopier/Client/Components/Authentication.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar signin = function signin() {\n  return _regeneratorRuntime.async(function signin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          try {\n            console.log(\"user successfully loggen in!: \", success);\n          } catch (err) {\n            console.log(\"error signing up: \", err);\n          }\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport var LoginScreen = function LoginScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setusername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setpassword = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Username\",\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(e) {\n      setusername(e.target);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(e) {\n      setpassword(e.target);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"SIGN IN\",\n    onPress: signin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar signup = function signup(e) {\n  var description, body, response, list, dis;\n  return _regeneratorRuntime.async(function signup$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          description = {\n            username: username\n          };\n          e.preventDefault();\n          _context2.prev = 2;\n          body = {\n            description: description\n          };\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:5000/signup\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          }));\n\n        case 6:\n          response = _context2.sent;\n          list = {\n            username: username\n          };\n          list.push(body);\n          _context2.next = 14;\n          break;\n\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](2);\n          console.error(_context2.t0.message);\n\n        case 14:\n          setusername('');\n          dis = _this.state.list;\n          console.log(dis);\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[2, 11]], Promise);\n};\n\nexport var SignUpScreen = function SignUpScreen(props) {\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      username = _useState6[0],\n      setusername = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setpassword = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      email = _useState10[0],\n      setemail = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      phone_number = _useState12[0],\n      setphone_number = _useState12[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Username\",\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(e) {\n      setusername(e.target);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(e) {\n      setpassword(e.target);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Email\",\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(e) {\n      setemail(e.target);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Phone Number\",\n    autoCapitalize: \"none\",\n    placeholderTextColor: \"white\",\n    onChangeText: function onChangeText(e) {\n      setphone_number(e.target);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Sign Up\",\n    onPress: signup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  input: {\n    width: 350,\n    height: 55,\n    backgroundColor: \"#42A5F5\",\n    margin: 10,\n    padding: 8,\n    color: \"white\",\n    borderRadius: 14,\n    fontSize: 18,\n    fontWeight: \"500\"\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/muneeb/E-Photocopier/Client/Components/Authentication.js"],"names":["React","useState","signin","console","log","success","err","LoginScreen","props","username","setusername","password","setpassword","styles","container","input","e","target","signup","description","preventDefault","body","fetch","method","headers","JSON","stringify","response","list","push","error","message","dis","state","SignUpScreen","email","setemail","phone_number","setphone_number","StyleSheet","create","width","height","backgroundColor","margin","padding","color","borderRadius","fontSize","fontWeight","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["// Login.js\nimport React, { useState } from \"react\";\nimport { View, Button, TextInput, StyleSheet } from \"react-native\";\nconst signin = async () => {\n  try {\n    // here place your login logic\n    console.log(\"user successfully loggen in!: \", success);\n  } catch (err) {\n    console.log(\"error signing up: \", err);\n  }\n};\nexport const LoginScreen = (props) => {\n  const [username, setusername] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Username\"\n        autoCapitalize=\"none\"\n        placeholderTextColor=\"white\"\n        onChangeText={(e) => {\n          setusername(e.target);\n        }}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        secureTextEntry={true}\n        autoCapitalize=\"none\"\n        placeholderTextColor=\"white\"\n        onChangeText={(e) => {\n          setpassword(e.target);\n        }}\n      />\n      <Button title=\"SIGN IN\" onPress={signin} />\n    </View>\n  );\n};\n\nconst signup = async (e) => {\n  const description = {username};\n  e.preventDefault();\n  try {\n    const body = { description };\n    const response = await fetch(\"http://localhost:5000/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    });\n    const list = {username};\n    list.push(body);\n  } catch (err) {\n    console.error(err.message);\n  }\n  setusername('');\n  const dis = this.state.list;\n  console.log(dis);\n};\n\nexport const SignUpScreen = (props) => {\n  const [username, setusername] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [phone_number, setphone_number] = useState(\"\");\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Username\"\n        autoCapitalize=\"none\"\n        placeholderTextColor=\"white\"\n        onChangeText={(e) => {\n          setusername(e.target);\n        }}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        secureTextEntry={true}\n        autoCapitalize=\"none\"\n        placeholderTextColor=\"white\"\n        onChangeText={(e) => {\n          setpassword(e.target);\n        }}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        autoCapitalize=\"none\"\n        placeholderTextColor=\"white\"\n        onChangeText={(e) => {\n          setemail(e.target);\n        }}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Phone Number\"\n        autoCapitalize=\"none\"\n        placeholderTextColor=\"white\"\n        onChangeText={(e) => {\n          setphone_number(e.target);\n        }}\n      />\n      <Button title=\"Sign Up\" onPress={signup} />\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  input: {\n    width: 350,\n    height: 55,\n    backgroundColor: \"#42A5F5\",\n    margin: 10,\n    padding: 8,\n    color: \"white\",\n    borderRadius: 14,\n    fontSize: 18,\n    fontWeight: \"500\",\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}