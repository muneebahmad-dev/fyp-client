{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/muneeb/fyp-client/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport FlashMessage, { showMessage } from \"react-native-flash-message\";\n\nvar CustomButton = function CustomButton(_ref) {\n  var onPress = _ref.onPress,\n      title = _ref.title,\n      titleProps = _ref.titleProps,\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, [\"onPress\", \"title\", \"titleProps\", \"style\"]);\n\n  return React.createElement(TouchableOpacity, _extends({\n    onPress: onPress,\n    style: [styles.btn, style]\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 3\n    }\n  }), React.createElement(Text, _extends({\n    style: styles.btnTitle\n  }, titleProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }), title));\n};\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this2;\n\n    _classCallCheck(this, LoginScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n\n    _this2.loginSuccess = function () {\n      showMessage({\n        title: \"Login success!\",\n        message: \"Will show this message green\",\n        type: \"success\"\n      });\n    };\n\n    return _this2;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }\n      }, React.createElement(CustomButton, {\n        onPress: this.loginSuccess,\n        title: \"Show Login Message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }), React.createElement(CustomButton, {\n        onPress: function onPress() {\n          return _this3.props.navigation.navigate(\"Logout\");\n        },\n        title: \"Go to Logout Screen\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }\n      }), React.createElement(CustomButton, {\n        onPress: function onPress() {\n          return alert(\"Show a default alert\");\n        },\n        title: \"Show Alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nLoginScreen.navigationOptions = {\n  title: \"Login\"\n};\n\nvar LogoutScreen = function (_React$Component2) {\n  _inherits(LogoutScreen, _React$Component2);\n\n  var _super2 = _createSuper(LogoutScreen);\n\n  function LogoutScreen() {\n    var _this4;\n\n    _classCallCheck(this, LogoutScreen);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this4 = _super2.call.apply(_super2, [this].concat(args));\n\n    _this4.logoutSuccess = function () {\n      showMessage({\n        title: \"Logout success!\",\n        message: \"Will show this message danger/red\",\n        type: \"danger\"\n      });\n    };\n\n    return _this4;\n  }\n\n  _createClass(LogoutScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 7\n        }\n      }, React.createElement(CustomButton, {\n        onPress: this.logoutSuccess,\n        title: \"Show Login Message\",\n        style: {\n          marginVertical: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }\n      }), React.createElement(CustomButton, {\n        onPress: function onPress() {\n          return _this5.props.navigation.goBack();\n        },\n        title: \"Go to Login Screen\",\n        style: {\n          marginVertical: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      }), React.createElement(CustomButton, {\n        onPress: function onPress() {\n          return alert(\"Show a default alert\");\n        },\n        title: \"Show Another Alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return LogoutScreen;\n}(React.Component);\n\nLogoutScreen.navigationOptions = {\n  title: \"Logout\"\n};\nvar MainStackNav = createStackNavigator({\n  Login: {\n    screen: LoginScreen\n  },\n  Logout: {\n    screen: LogoutScreen\n  }\n});\n\nvar App = function (_React$Component3) {\n  _inherits(App, _React$Component3);\n\n  var _super3 = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 7\n        }\n      }, React.createElement(MainStackNav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }\n      }), React.createElement(FlashMessage, {\n        position: \"top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ecf0f1\"\n  },\n  btn: {\n    backgroundColor: \"#333\",\n    marginVertical: 6,\n    marginHorizontal: 12\n  },\n  btnTitle: {\n    textAlign: \"center\",\n    fontSize: 16,\n    color: \"#fff\",\n    padding: 16\n  }\n});","map":{"version":3,"sources":["/home/muneeb/fyp-client/App.js"],"names":["React","createStackNavigator","FlashMessage","showMessage","CustomButton","onPress","title","titleProps","style","props","styles","btn","btnTitle","LoginScreen","loginSuccess","message","type","container","navigation","navigate","alert","Component","navigationOptions","LogoutScreen","logoutSuccess","marginVertical","goBack","MainStackNav","Login","screen","Logout","App","StyleSheet","create","flex","backgroundColor","marginHorizontal","textAlign","fontSize","color","padding"],"mappings":"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","sourcesContent":["// import * as React from \"react\";\n// import { StyleSheet, Text } from \"react-native\";\n// import store from \"./redux/store\";\n// import { NavigationContainer } from \"@react-navigation/native\";\n// import { createStackNavigator } from \"@react-navigation/stack\";\n// import { LoginScreen, SignUpScreen } from \"./screens/Auth/Authentication\";\n// import Dashboard from \"./screens/User/Dashboard/Dashboard\";\n// import WelcomeScreen from \"./screens/Welcome/Welcome\";\n// import { Provider } from \"react-redux\";\n// import AdminDashboard from \"./screens/Admin/AdminDashboard\";\n// import ForgotPasswordScreen from \"./screens/Auth/ForgotPassword\";\n\n// // import firebase from \"@react-native-firebase/app\";\n// // import \"@react-native-firebase/firestore\";\n\n// // const firebaseConfig = {\n// //   apiKey: \"AIzaSyCzFC6z3PUnpdbFhMooSJlsKk2fZHlh-CQ\",\n// //   authDomain: \"e-photocopier.firebaseapp.com\",\n// //   projectId: \"e-photocopier\",\n// //   storageBucket: \"e-photocopier.appspot.com\",\n// //   messagingSenderId: \"770827431066\",\n// //   appId: \"1:770827431066:web:4f06cdeaa8012711bf8323\",\n// //   measurementId: \"G-MQ8XH6DJXG\",\n// // };\n\n// // firebase.initializeApp(firebaseConfig);\n\n// const Stack = createStackNavigator();\n\n// const App = (props) => {\n//   return (\n//     <Provider store={store}>\n//       <NavigationContainer styles={styles.container}>\n//         <Stack.Navigator tintColor={\"white\"}>\n//           <Stack.Screen\n//             name=\"Welcome\"\n//             component={WelcomeScreen}\n//             options={{\n//               headerStyle: {\n//                 backgroundColor: \"#2291FF\",\n//               },\n//               headerTitleStyle: {\n//                 color: \"white\",\n//               },\n//               headerTintColor: \"#ffffff\",\n//             }}\n//           />\n//           <Stack.Screen\n//             name=\"LogIn\"\n//             component={LoginScreen}\n//             options={{\n//               headerStyle: {\n//                 backgroundColor: \"#2291FF\",\n//               },\n//               headerTitleStyle: {\n//                 color: \"white\",\n//               },\n//               headerTintColor: \"#ffffff\",\n//             }}\n//           />\n//           <Stack.Screen\n//             name=\"Signup\"\n//             component={SignUpScreen}\n//             options={{\n//               headerStyle: {\n//                 backgroundColor: \"#2291FF\",\n//               },\n//               headerTitleStyle: {\n//                 color: \"white\",\n//               },\n//               headerTintColor: \"#ffffff\",\n//             }}\n//           />\n//           <Stack.Screen\n//             name=\"Forgot Password\"\n//             component={ForgotPasswordScreen}\n//             options={{\n//               headerStyle: {\n//                 backgroundColor: \"#2291FF\",\n//               },\n//               headerTitleStyle: {\n//                 color: \"white\",\n//               },\n//               headerTintColor: \"#ffffff\",\n//             }}\n//           />\n//           <Stack.Screen\n//             name=\"Home\"\n//             component={Dashboard}\n//             options={{\n//               headerStyle: {\n//                 backgroundColor: \"#2291FF\",\n//               },\n//               headerTitleStyle: {\n//                 color: \"white\",\n//               },\n//               headerLeft: () => null,\n//               headerTintColor: \"#ffffff\",\n//             }}\n//           />\n\n//           <Stack.Screen\n//             name=\"Admin Home\"\n//             component={AdminDashboard}\n//             options={{\n//               headerStyle: {\n//                 backgroundColor: \"#2291FF\",\n//               },\n//               headerTitleStyle: {\n//                 color: \"white\",\n//               },\n\n//               headerTintColor: \"#ffffff\",\n//             }}\n//           />\n//         </Stack.Navigator>\n//       </NavigationContainer>\n//     </Provider>\n//   );\n// };\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//   },\n//   textstyles: {\n//     color: \"white\",\n//   },\n// });\n// export default App;\n\nimport React from \"react\";\nimport { View, Button, StyleSheet, TouchableOpacity, Text } from \"react-native\";\nimport { createStackNavigator } from \"react-navigation-stack\";\nimport FlashMessage, { showMessage } from \"react-native-flash-message\";\n\nconst CustomButton = ({ onPress, title, titleProps, style, ...props }) => (\n  <TouchableOpacity onPress={onPress} style={[styles.btn, style]} {...props}>\n    <Text style={styles.btnTitle} {...titleProps}>\n      {title}\n    </Text>\n  </TouchableOpacity>\n);\n\nclass LoginScreen extends React.Component {\n  static navigationOptions = {\n    title: \"Login\",\n  };\n  loginSuccess = () => {\n    showMessage({\n      title: \"Login success!\",\n      message: \"Will show this message green\",\n      type: \"success\",\n    });\n  };\n  render() {\n    return (\n      <View style={styles.container}>\n        <CustomButton onPress={this.loginSuccess} title=\"Show Login Message\" />\n        <CustomButton\n          onPress={() => this.props.navigation.navigate(\"Logout\")}\n          title=\"Go to Logout Screen\"\n        />\n        <CustomButton\n          onPress={() => alert(\"Show a default alert\")}\n          title=\"Show Alert\"\n        />\n      </View>\n    );\n  }\n}\n\nclass LogoutScreen extends React.Component {\n  static navigationOptions = {\n    title: \"Logout\",\n  };\n  logoutSuccess = () => {\n    showMessage({\n      title: \"Logout success!\",\n      message: \"Will show this message danger/red\",\n      type: \"danger\",\n    });\n  };\n  render() {\n    return (\n      <View style={styles.container}>\n        <CustomButton\n          onPress={this.logoutSuccess}\n          title=\"Show Login Message\"\n          style={{ marginVertical: 10 }}\n        />\n        <CustomButton\n          onPress={() => this.props.navigation.goBack()}\n          title=\"Go to Login Screen\"\n          style={{ marginVertical: 10 }}\n        />\n        <CustomButton\n          onPress={() => alert(\"Show a default alert\")}\n          title=\"Show Another Alert\"\n        />\n      </View>\n    );\n  }\n}\n\nconst MainStackNav = createStackNavigator({\n  Login: {\n    screen: LoginScreen,\n  },\n  Logout: {\n    screen: LogoutScreen,\n  },\n});\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <MainStackNav />\n        {/* GLOBAL FLASH MESSAGE COMPONENT INSTANCE */}\n        <FlashMessage position=\"top\" />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ecf0f1\",\n  },\n  btn: {\n    backgroundColor: \"#333\",\n    marginVertical: 6,\n    marginHorizontal: 12,\n  },\n  btnTitle: {\n    textAlign: \"center\",\n    fontSize: 16,\n    color: \"#fff\",\n    padding: 16,\n  },\n});\n\n// import React from \"react\";\n// import { View, Button } from \"react-native\";\n\n// import { showMessage, hideMessage } from \"react-native-flash-message\";\n\n// class MyScreen extends React.Component {\n//   render() {\n//     return (\n//       <View style={{ flex: 1 }}>\n//         <Button\n//           onPress={() => {\n//             /* HERE WE GONE SHOW OUR FIRST MESSAGE */\n//             showMessage({\n//               message: \"Simple message\",\n//               type: \"info\",\n//             });\n//           }}\n//           title=\"Request Details\"\n//           color=\"#841584\"\n//         />\n//       </View>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}