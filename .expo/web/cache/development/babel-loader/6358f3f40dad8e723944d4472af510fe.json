{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _actionMap,\n    _jsxFileName = \"/home/muneeb/E-Photocopier/Client/node_modules/react-native-router-flux/src/Store.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { createAppContainer, NavigationActions, StackActions } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createDrawerNavigator, DrawerActions } from 'react-navigation-drawer';\nimport { createMaterialTopTabNavigator, createBottomTabNavigator } from 'react-navigation-tabs';\nimport PropTypes from 'prop-types';\nimport createReducer from \"./Reducer\";\nimport * as ActionConst from \"./ActionConst\";\nimport { OnEnter, OnExit, assert } from \"./Util\";\nimport { LeftButton, RightButton, BackButton } from \"./NavBar\";\nimport LightboxRenderer from \"./LightboxRenderer\";\nimport _drawerImage from \"../images/menu_burger.png\";\nimport { getActiveState, getParent, getRouteNameByKey } from \"./State\";\nimport Modal from \"./Modal\";\nimport Lightbox from \"./Lightbox\";\nimport Drawer from \"./Drawer\";\nimport Tabs from \"./Tabs\";\nimport Overlay from \"./Overlay\";\nimport OverlayRenderer from \"./OverlayRenderer\";\nimport createStackNavigatorHOC from \"./createStackNavigatorHOC\";\nimport createTabNavigatorHOC from \"./createTabNavigatorHOC\";\nvar RightNavBarButton;\nvar LeftNavBarButton;\nvar BackNavBarButton;\nvar counter = 0;\nexport var actionMap = (_actionMap = {}, _defineProperty(_actionMap, ActionConst.JUMP, 'jump'), _defineProperty(_actionMap, ActionConst.PUSH, 'push'), _defineProperty(_actionMap, ActionConst.REPLACE, 'replace'), _defineProperty(_actionMap, ActionConst.BACK, 'pop'), _defineProperty(_actionMap, ActionConst.BACK_ACTION, 'pop'), _defineProperty(_actionMap, ActionConst.POP_TO, 'popTo'), _defineProperty(_actionMap, ActionConst.REFRESH, 'refresh'), _defineProperty(_actionMap, ActionConst.RESET, 'reset'), _defineProperty(_actionMap, ActionConst.PUSH_OR_POP, 'push'), _actionMap);\nvar reservedKeys = ['addRef', 'back', 'children', 'create', 'dispatch', 'drawerClose', 'drawerOpen', 'execute', 'left', 'leftButton', 'navBar', 'navigate', 'on', 'onEnter', 'onExit', 'onLeft', 'onRight', 'pop', 'popTo', 'push', 'refresh', 'refs', 'removeRef', 'renderLeftButton', 'renderRightButton', 'renderTitle', 'replace', 'right', 'rightButton', 'run', 'setParams', 'title'];\nvar dontInheritKeys = ['backToInitial', 'children', 'component', 'contentComponent', 'drawer', 'hideNavBar', 'hideTabBar', 'key', 'lightbox', 'modal', 'navigator', 'navTransparent', 'overlay', 'ref', 'style', 'tabBarComponent', 'tabs', 'title', 'type'];\n\nfunction getValue(value, params) {\n  return value instanceof Function ? value(params) : value;\n}\n\nfunction getProperties() {\n  var component = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var res = {};\n\n  for (var _iterator = _createForOfIteratorHelperLoose(reservedKeys), _step; !(_step = _iterator()).done;) {\n    var key = _step.value;\n\n    if (component[key]) {\n      res[key] = component[key];\n    }\n  }\n\n  delete res.children;\n  return res;\n}\n\nfunction createTabBarOptions(_ref) {\n  var tabBarStyle = _ref.tabBarStyle,\n      activeTintColor = _ref.activeTintColor,\n      inactiveTintColor = _ref.inactiveTintColor,\n      activeBackgroundColor = _ref.activeBackgroundColor,\n      inactiveBackgroundColor = _ref.inactiveBackgroundColor,\n      showLabel = _ref.showLabel,\n      labelStyle = _ref.labelStyle,\n      tabStyle = _ref.tabStyle,\n      props = _objectWithoutProperties(_ref, [\"tabBarStyle\", \"activeTintColor\", \"inactiveTintColor\", \"activeBackgroundColor\", \"inactiveBackgroundColor\", \"showLabel\", \"labelStyle\", \"tabStyle\"]);\n\n  return _objectSpread(_objectSpread({}, props), {}, {\n    style: tabBarStyle,\n    activeTintColor: activeTintColor,\n    inactiveTintColor: inactiveTintColor,\n    activeBackgroundColor: activeBackgroundColor,\n    inactiveBackgroundColor: inactiveBackgroundColor,\n    showLabel: showLabel,\n    labelStyle: labelStyle,\n    tabStyle: tabStyle\n  });\n}\n\nfunction createNavigationOptions(params) {\n  var _this = this;\n\n  var type = params.type,\n      cardStyle = params.cardStyle,\n      back = params.back,\n      backButtonImage = params.backButtonImage,\n      backButtonTextStyle = params.backButtonTextStyle,\n      backTitle = params.backTitle,\n      backTitleEnabled = params.backTitleEnabled,\n      backToInitial = params.backToInitial,\n      component = params.component,\n      drawerIcon = params.drawerIcon,\n      drawerImage = params.drawerImage,\n      drawerPosition = params.drawerPosition,\n      getTitle = params.getTitle,\n      headerLayoutPreset = params.headerLayoutPreset,\n      headerStyle = params.headerStyle,\n      headerTitleStyle = params.headerTitleStyle,\n      hideDrawerButton = params.hideDrawerButton,\n      hideNavBar = params.hideNavBar,\n      hideTabBar = params.hideTabBar,\n      icon = params.icon,\n      init = params.init,\n      left = params.left,\n      leftButton = params.leftButton,\n      leftButtonImage = params.leftButtonImage,\n      leftButtonTextStyle = params.leftButtonTextStyle,\n      leftTitle = params.leftTitle,\n      navBar = params.navBar,\n      navBarButtonColor = params.navBarButtonColor,\n      navigationBarStyle = params.navigationBarStyle,\n      navigationBarTitleImage = params.navigationBarTitleImage,\n      navigationBarTitleImageStyle = params.navigationBarTitleImageStyle,\n      navTransparent = params.navTransparent,\n      onLeft = params.onLeft,\n      onRight = params.onRight,\n      panHandlers = params.panHandlers,\n      renderBackButton = params.renderBackButton,\n      renderNavigationBar = params.renderNavigationBar,\n      renderTitle = params.renderTitle,\n      right = params.right,\n      rightButton = params.rightButton,\n      rightButtonImage = params.rightButtonImage,\n      rightButtonTextStyle = params.rightButtonTextStyle,\n      rightTitle = params.rightTitle,\n      tabBarIcon = params.tabBarIcon,\n      tabBarLabel = params.tabBarLabel,\n      title = params.title,\n      titleStyle = params.titleStyle,\n      props = _objectWithoutProperties(params, [\"type\", \"cardStyle\", \"back\", \"backButtonImage\", \"backButtonTextStyle\", \"backTitle\", \"backTitleEnabled\", \"backToInitial\", \"component\", \"drawerIcon\", \"drawerImage\", \"drawerPosition\", \"getTitle\", \"headerLayoutPreset\", \"headerStyle\", \"headerTitleStyle\", \"hideDrawerButton\", \"hideNavBar\", \"hideTabBar\", \"icon\", \"init\", \"left\", \"leftButton\", \"leftButtonImage\", \"leftButtonTextStyle\", \"leftTitle\", \"navBar\", \"navBarButtonColor\", \"navigationBarStyle\", \"navigationBarTitleImage\", \"navigationBarTitleImageStyle\", \"navTransparent\", \"onLeft\", \"onRight\", \"panHandlers\", \"renderBackButton\", \"renderNavigationBar\", \"renderTitle\", \"right\", \"rightButton\", \"rightButtonImage\", \"rightButtonTextStyle\", \"rightTitle\", \"tabBarIcon\", \"tabBarLabel\", \"title\", \"titleStyle\"]);\n\n  var NavBar = renderNavigationBar || navBar;\n\n  if (component && component.navigationOptions) {\n    return component.navigationOptions;\n  }\n\n  return function (_ref2) {\n    var navigation = _ref2.navigation,\n        screenProps = _ref2.screenProps;\n    var navigationParams = navigation.state.params || {};\n\n    var state = _objectSpread(_objectSpread(_objectSpread({\n      navigation: navigation\n    }, params), navigationParams), screenProps);\n\n    var res = _objectSpread(_objectSpread({\n      animationEnabled: !(type === ActionConst.REPLACE || type === 'replace' || type === ActionConst.RESET || type === 'reset')\n    }, props), {}, {\n      cardStyle: navigationParams.cardStyle || cardStyle,\n      headerBackImage: navigationParams.backButtonImage || backButtonImage,\n      headerBackTitle: getValue(navigationParams.backTitle || backTitle, state),\n      headerBackTitleEnabled: navigationParams.backTitleEnabled || backTitleEnabled,\n      headerLayoutPreset: navigationParams.headerLayoutPreset || headerLayoutPreset,\n      headerLeft: function headerLeft() {\n        return getValue(navigationParams.left || left || leftButton || params.renderLeftButton, state);\n      },\n      headerRight: function headerRight() {\n        return getValue(navigationParams.right || right || rightButton || params.renderRightButton, state);\n      },\n      headerStyle: getValue(navigationParams.headerStyle || headerStyle || navigationBarStyle, state),\n      headerTintColor: navBarButtonColor || props.tintColor || navigationParams.tintColor || navigationParams.headerTintColor,\n      headerTitle: getValue(navigationParams.renderTitle || renderTitle || params.renderTitle, state),\n      headerTitleStyle: headerTitleStyle || titleStyle,\n      title: getValue(navigationParams.title || title || getTitle, state)\n    });\n\n    var NavBarFromParams = navigationParams.renderNavigationBar || navigationParams.navBar;\n\n    if (NavBarFromParams != null) {\n      if (NavBarFromParams) {\n        res.header = function (data) {\n          return React.createElement(NavBarFromParams, _extends({\n            navigation: navigation\n          }, state, data, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 30\n            }\n          }));\n        };\n      }\n    } else if (NavBar) {\n      res.header = function (data) {\n        return React.createElement(NavBar, _extends({\n          navigation: navigation\n        }, state, data, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 28\n          }\n        }));\n      };\n    }\n\n    if (typeof navigationParams.panHandlers !== 'undefined') {\n      if (navigationParams.panHandlers === null) {\n        res.gesturesEnabled = false;\n      }\n    } else if (panHandlers === null) {\n      res.gesturesEnabled = false;\n    }\n\n    if (navigationBarTitleImage) {\n      res.headerTitle = React.createElement(Image, {\n        source: navigationBarTitleImage,\n        style: navigationBarTitleImageStyle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }\n      });\n    }\n\n    if (tabBarLabel) {\n      res.tabBarLabel = tabBarLabel;\n    }\n\n    if (tabBarIcon || icon) {\n      var Icon = tabBarIcon || icon;\n\n      res.tabBarIcon = function (data) {\n        return React.createElement(Icon, _extends({}, state, data, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 32\n          }\n        }));\n      };\n    }\n\n    var componentData = {};\n\n    if (component) {\n      for (var _i = 0, _arr = ['onRight', 'onLeft', 'rightButton', 'leftButton', 'leftTitle', 'rightTitle', 'rightButtonImage', 'leftButtonImage', 'rightButtonTextStyle', 'leftButtonTextStyle', 'rightButtonIconStyle', 'leftButtonIconStyle', 'leftButtonTintColor', 'rightButtonTintColor']; _i < _arr.length; _i++) {\n        var key = _arr[_i];\n\n        if (component[key]) {\n          componentData[key] = component[key];\n        }\n      }\n    }\n\n    if (rightButtonImage || rightTitle || params.renderRightButton || onRight || navigationParams.onRight || navigationParams.rightTitle || navigationParams.rightButtonImage || rightButtonTextStyle || (drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition === 'right') {\n      res.headerRight = function () {\n        return getValue(navigationParams.right || navigationParams.rightButton || params.renderRightButton, _objectSpread(_objectSpread({}, navigationParams), screenProps)) || React.createElement(RightNavBarButton, _extends({\n          navigation: navigation\n        }, params, navigationParams, componentData, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 9\n          }\n        }));\n      };\n    }\n\n    if (leftButtonImage || backButtonImage || backTitle || leftTitle || params.renderLeftButton || leftButtonTextStyle || renderBackButton || backButtonTextStyle || onLeft || navigationParams.leftTitle || navigationParams.onLeft || navigationParams.leftButtonImage || navigationParams.backButtonImage || navigationParams.backTitle || (drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition !== 'right') {\n      var _leftButton = navigationParams.left || navigationParams.leftButton || params.renderLeftButton;\n\n      res.headerLeft = function () {\n        return getValue(_leftButton, _objectSpread(_objectSpread(_objectSpread({}, params), navigationParams), screenProps)) || (onLeft && (leftTitle || navigationParams.leftTitle || leftButtonImage || navigationParams.leftButtonImage) || drawerImage || drawerIcon) && React.createElement(LeftNavBarButton, _extends({\n          navigation: navigation\n        }, params, navigationParams, componentData, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 11\n          }\n        })) || res.headerLeft || (init ? null : !_leftButton && renderBackButton && renderBackButton(state) || !_leftButton && React.createElement(BackNavBarButton, _extends({\n          navigation: navigation\n        }, state, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 107\n          }\n        }))) || null;\n      };\n    }\n\n    if (back) {\n      res.headerLeft = renderBackButton && renderBackButton(state) || function () {\n        return React.createElement(BackNavBarButton, _extends({\n          navigation: navigation\n        }, state, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 80\n          }\n        }));\n      };\n    }\n\n    if (typeof navigationParams.left !== 'undefined' || typeof navigationParams.leftButton !== 'undefined' || typeof navigationParams.renderLeftButton !== 'undefined') {\n      if (navigationParams.left === null || navigationParams.leftButton === null || navigationParams.renderLeftButton === null) {\n        res.headerLeft = null;\n      }\n    }\n\n    var routeParams = navigation.state.routes && navigation.state.routes[navigation.state.index].params;\n\n    if (navigationParams.hideTabBar != null) {\n      if (navigationParams.hideTabBar) {\n        res.tabBarVisible = false;\n      }\n    } else if (hideTabBar) {\n      res.tabBarVisible = false;\n    } else if (routeParams && routeParams.hideTabBar) {\n      res.tabBarVisible = false;\n    }\n\n    if (navigationParams.hideNavBar != null) {\n      if (navigationParams.hideNavBar) {\n        res.header = null;\n      }\n    } else if (hideNavBar) {\n      res.header = null;\n    }\n\n    if (navTransparent) {\n      res.headerTransparent = true;\n      res.headerStyle = {};\n    }\n\n    if (backToInitial) {\n      var userDefinedTabBarOnPress = res.tabBarOnPress;\n\n      res.tabBarOnPress = function (data) {\n        if (userDefinedTabBarOnPress) {\n          console.warn('backToInitial and tabBarOnPress were both defined and might cause unexpected navigation behaviors. I hope you know what you are doing ;-)');\n          userDefinedTabBarOnPress(data);\n        }\n\n        if (data.navigation && data.navigation.state.index !== 0) {\n          data.navigation.dispatch(StackActions.popToTop());\n        } else {\n          data.defaultHandler();\n        }\n      };\n    }\n\n    return res;\n  };\n}\n\nfunction originalRouteName(routeName) {\n  if (routeName.startsWith('_')) {\n    return routeName.substring(1);\n  }\n\n  return routeName;\n}\n\nfunction isStatelessComponent(Component) {\n  return !Component.prototype || typeof Component.prototype.render !== 'function';\n}\n\nfunction extendProps(props, store) {\n  if (!props) {\n    return {};\n  }\n\n  var res = _objectSpread({}, props);\n\n  var _loop = function _loop(transition) {\n    if (reservedKeys.indexOf(transition) === -1 && transition.startsWith('on') && transition.charAt(2) >= 'A' && transition.charAt(2) <= 'Z' && typeof props[transition] === 'string') {\n      if (store[props[transition]]) {\n        res[transition] = function (params) {\n          return store[props[transition]](params);\n        };\n      }\n    }\n  };\n\n  for (var _i2 = 0, _Object$keys = Object.keys(props); _i2 < _Object$keys.length; _i2++) {\n    var transition = _Object$keys[_i2];\n\n    _loop(transition);\n  }\n\n  return res;\n}\n\nfunction createWrapper(Component, wrapBy, store) {\n  if (!Component) {\n    return null;\n  }\n\n  var wrapper = wrapBy || function (props) {\n    return props;\n  };\n\n  if (!isStatelessComponent(Component)) {\n    var Wrapped = function (_React$Component) {\n      _inherits(Wrapped, _React$Component);\n\n      var _super = _createSuper(Wrapped);\n\n      function Wrapped() {\n        var _this2;\n\n        _classCallCheck(this, Wrapped);\n\n        _this2 = _super.call(this);\n        _this2.onRef = _this2.onRef.bind(_assertThisInitialized(_this2));\n        return _this2;\n      }\n\n      _createClass(Wrapped, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var navigation = this.props.navigation;\n\n          if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n            store.addRef(originalRouteName(navigation.state.routeName), this.ref);\n          }\n\n          if (this.ref && this.ref.onEnter) {\n            this.ref.onEnter(navigation && navigation.state);\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          var navigation = this.props.navigation;\n\n          if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n            store.deleteRef(originalRouteName(navigation.state.routeName));\n          }\n\n          if (this.ref && this.ref.onExit) {\n            this.ref.onExit(navigation && navigation.state);\n          }\n\n          this.ref = null;\n        }\n      }, {\n        key: \"onRef\",\n        value: function onRef(ref) {\n          this.ref = ref;\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var navigation = this.props.navigation;\n\n          if (!navigation || !navigation.state) {\n            return React.createElement(Component, _extends({\n              ref: this.onRef\n            }, this.props, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 18\n              }\n            }));\n          }\n\n          return React.createElement(Component, _extends({\n            ref: this.onRef\n          }, this.props, extendProps(navigation.state.params, store), {\n            name: navigation.state.routeName,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 16\n            }\n          }));\n        }\n      }]);\n\n      return Wrapped;\n    }(React.Component);\n\n    Wrapped.propTypes = {\n      navigation: PropTypes.shape().isRequired\n    };\n    return wrapper(Wrapped);\n  }\n\n  function StatelessWrapped(_ref3) {\n    var navigation = _ref3.navigation,\n        props = _objectWithoutProperties(_ref3, [\"navigation\"]);\n\n    return React.createElement(Component, _extends({}, props, {\n      navigation: navigation\n    }, extendProps(navigation.state.params, store), {\n      name: navigation.state.routeName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  StatelessWrapped.propTypes = {\n    navigation: PropTypes.shape().isRequired\n  };\n  return wrapper(StatelessWrapped);\n}\n\nfunction filterParam() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (data.toString() !== '[object Object]') {\n    return {\n      data: data\n    };\n  }\n\n  var proto = (data || {}).constructor.name;\n\n  if (!data || proto !== 'Object') {\n    return {};\n  }\n\n  return data;\n}\n\nfunction uniteParams(routeName, params) {\n  var res = {};\n\n  for (var _iterator2 = _createForOfIteratorHelperLoose(params), _step2; !(_step2 = _iterator2()).done;) {\n    var param = _step2.value;\n\n    if (param) {\n      res = _objectSpread(_objectSpread({}, res), filterParam(param));\n    }\n  }\n\n  res.routeName = routeName;\n  return res;\n}\n\nvar defaultSuccess = function defaultSuccess() {};\n\nvar defaultFailure = function defaultFailure() {};\n\nvar NavigationStore = function () {\n  function NavigationStore() {\n    var _this3 = this;\n\n    _classCallCheck(this, NavigationStore);\n\n    this.getStateForAction = null;\n    this.reducer = null;\n    this._navigator = null;\n    this.externalDispatch = null;\n    this.externalState = null;\n    this.prevState = null;\n    this.externalAction = {};\n    this.refs = {};\n    this.states = {};\n    this.isLogical = {};\n\n    this.setCustomReducer = function (Navigator) {\n      _this3.getStateForAction = Navigator.router.getStateForAction;\n      var reducer = createReducer(_this3);\n\n      Navigator.router.getStateForAction = function (cmd, state) {\n        return _this3.reducer ? _this3.reducer(state, cmd) : reducer(state, cmd);\n      };\n    };\n\n    this.onEnterHandler = function _callee(currentScene) {\n      var handler, success, failure, res;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this3.states[currentScene]) {\n                _context.next = 15;\n                break;\n              }\n\n              handler = _this3[currentScene + OnEnter];\n              success = _this3.states[currentScene].success || defaultSuccess;\n              failure = _this3.states[currentScene].failure || defaultFailure;\n\n              if (!handler) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.prev = 5;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(handler(_this3.currentParams, _this3.state));\n\n            case 8:\n              res = _context.sent;\n\n              if (res) {\n                success(res);\n              } else {\n                failure();\n              }\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](5);\n              failure({\n                error: _context.t0.message\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[5, 12]], Promise);\n    };\n\n    this.onExitHandler = function (prevScene) {\n      if (prevScene) {\n        var exitHandler = _this3[prevScene + OnExit];\n\n        if (exitHandler) {\n          try {\n            var res = exitHandler(_this3.state);\n\n            if (res instanceof Promise) {\n              res.then(defaultSuccess, defaultFailure);\n            }\n          } catch (e) {\n            console.error('Error during onExit handler:', e);\n          }\n        }\n      }\n    };\n\n    this.onNavigationStateChange = function _callee2(prevState, currentState, action) {\n      var activeState, currentScene, routeName;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this3.state = currentState;\n              _this3.prevState = prevState;\n              activeState = getActiveState(_this3.state);\n              currentScene = activeState.routeName;\n              _this3.currentParams = _objectSpread(_objectSpread({}, activeState.params), action.params);\n              _this3.currentScene = currentScene;\n              _this3.prevScene = _this3.prevState ? getActiveState(_this3.prevState).routeName : null;\n\n              if (_this3.currentScene !== _this3.prevScene) {\n                _this3.onExitHandler(_this3.prevScene);\n\n                setTimeout(function () {\n                  return _this3.dispatch({\n                    type: ActionConst.FOCUS,\n                    routeName: _this3.currentScene,\n                    params: _this3.currentParams\n                  });\n                });\n\n                _this3.onEnterHandler(currentScene);\n              } else {\n                routeName = getRouteNameByKey(_this3.state, action.key);\n\n                if (action.type === 'Navigation/DRAWER_OPENED') {\n                  _this3.onEnterHandler(routeName);\n                } else if (action.type === 'Navigation/DRAWER_CLOSED') {\n                  _this3.onExitHandler(routeName);\n                }\n              }\n\n              if (_this3.onStateChange) {\n                _this3.onStateChange(prevState, currentState, action);\n              }\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    this.setTopLevelNavigator = function (navigatorRef) {\n      _this3._navigator = navigatorRef;\n    };\n\n    this.addRef = function (name, ref) {\n      _this3.refs[name] = ref;\n    };\n\n    this.deleteRef = function (name) {\n      delete _this3.refs[name];\n    };\n\n    this.create = function (scene) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var wrapBy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (props) {\n        return props;\n      };\n      assert(!Array.isArray(scene), 'Router should contain only one scene, please wrap your scenes with root Scene ');\n      RightNavBarButton = wrapBy(RightButton);\n      LeftNavBarButton = wrapBy(LeftButton);\n      BackNavBarButton = wrapBy(BackButton);\n\n      var Navigator = _this3.processScene(scene, params, [], wrapBy);\n\n      _this3.onNavigationStateChange(null, Navigator.router.getStateForAction(NavigationActions.init()), NavigationActions.init());\n\n      _this3.setCustomReducer(Navigator);\n\n      return createAppContainer(Navigator);\n    };\n\n    this.createAction = function (name) {\n      return function (args) {\n        if (_this3.isLogical[name]) {\n          _this3[name](args);\n        } else {\n          setTimeout(function () {\n            return _this3[name](args);\n          });\n        }\n      };\n    };\n\n    this.processScene = function (scene) {\n      var _ref4;\n\n      var inheritProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var clones = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var wrapBy = arguments.length > 3 ? arguments[3] : undefined;\n      assert(scene.props, 'props should be defined');\n\n      if (!scene.props.children) {\n        return null;\n      }\n\n      var res = {};\n      var order = [];\n\n      var _scene$props = scene.props,\n          navigator = _scene$props.navigator,\n          renderer = _scene$props.renderer,\n          contentComponent = _scene$props.contentComponent,\n          drawerWidth = _scene$props.drawerWidth,\n          drawerLockMode = _scene$props.drawerLockMode,\n          tabBarPosition = _scene$props.tabBarPosition,\n          lazy = _scene$props.lazy,\n          duration = _scene$props.duration,\n          parentProps = _objectWithoutProperties(_scene$props, [\"navigator\", \"renderer\", \"contentComponent\", \"drawerWidth\", \"drawerLockMode\", \"tabBarPosition\", \"lazy\", \"duration\"]);\n\n      var tabs = parentProps.tabs,\n          modal = parentProps.modal,\n          lightbox = parentProps.lightbox,\n          overlay = parentProps.overlay,\n          drawer = parentProps.drawer,\n          transitionConfig = parentProps.transitionConfig,\n          tabBarComponent = parentProps.tabBarComponent;\n\n      if (scene.type === Modal) {\n        modal = true;\n      } else if (scene.type === Drawer) {\n        drawer = true;\n      } else if (scene.type === Lightbox) {\n        lightbox = true;\n      } else if (scene.type === Tabs) {\n        tabs = true;\n      } else if (scene.type === Overlay) {\n        overlay = true;\n      }\n\n      if (duration !== undefined && !transitionConfig) {\n        transitionConfig = function transitionConfig() {\n          return {\n            transitionSpec: {\n              duration: duration,\n              timing: Animated.timing,\n              easing: Easing.step0\n            }\n          };\n        };\n      }\n\n      var commonProps = _objectSpread(_objectSpread({}, inheritProps), parentProps);\n\n      delete commonProps.children;\n      delete commonProps.component;\n\n      for (var _i3 = 0, _Object$keys2 = Object.keys(commonProps); _i3 < _Object$keys2.length; _i3++) {\n        var pkey = _Object$keys2[_i3];\n\n        if (dontInheritKeys.includes(pkey) && (pkey === 'type' || pkey === 'hideNavBar' || !parentProps[pkey])) {\n          delete commonProps[pkey];\n        }\n      }\n\n      if (drawer) {\n        commonProps.drawerImage = commonProps.drawerImage || _drawerImage;\n      }\n\n      var children = !Array.isArray(parentProps.children) ? [parentProps.children] : (_ref4 = []).concat.apply(_ref4, _toConsumableArray(parentProps.children));\n\n      if (!drawer && !tabs && !overlay) {\n        children.push.apply(children, _toConsumableArray(clones));\n      }\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(children), _step3; !(_step3 = _iterator3()).done;) {\n        var child = _step3.value;\n\n        if (child && child.props.clone) {\n          if (clones.indexOf(child) === -1) {\n            clones.push(child);\n          }\n        }\n      }\n\n      var initialRouteName;\n      var initialRouteParams;\n\n      for (var _iterator4 = _createForOfIteratorHelperLoose(children), _step4; !(_step4 = _iterator4()).done;) {\n        var _child = _step4.value;\n\n        if (!_child) {\n          continue;\n        }\n\n        var key = _child.key || \"key\" + (counter += 1);\n        var init = key === children[0].key;\n        assert(reservedKeys.indexOf(key) === -1, \"Scene name cannot be reserved word: \" + _child.key);\n\n        var _child$props = _child.props,\n            component = _child$props.component,\n            _child$props$type = _child$props.type,\n            type = _child$props$type === void 0 ? tabs || drawer ? 'jump' : 'push' : _child$props$type,\n            path = _child$props.path,\n            onEnter = _child$props.onEnter,\n            onExit = _child$props.onExit,\n            on = _child$props.on,\n            failure = _child$props.failure,\n            success = _child$props.success,\n            wrap = _child$props.wrap,\n            _child$props$initial = _child$props.initial,\n            initial = _child$props$initial === void 0 ? false : _child$props$initial,\n            props = _objectWithoutProperties(_child$props, [\"component\", \"type\", \"path\", \"onEnter\", \"onExit\", \"on\", \"failure\", \"success\", \"wrap\", \"initial\"]);\n\n        if (!_this3.states[key]) {\n          _this3.states[key] = {};\n        }\n\n        for (var _i4 = 0, _Object$keys3 = Object.keys(props); _i4 < _Object$keys3.length; _i4++) {\n          var transition = _Object$keys3[_i4];\n\n          if (reservedKeys.indexOf(transition) === -1 && props[transition] instanceof Function) {\n            _this3.states[key][transition] = props[transition];\n          }\n        }\n\n        delete props.children;\n\n        if (success) {\n          _this3.states[key].success = success instanceof Function ? success : _this3.createAction(success);\n        }\n\n        if (failure) {\n          _this3.states[key].failure = failure instanceof Function ? failure : _this3.createAction(failure);\n        }\n\n        if (path) {\n          _this3.states[key].path = path;\n        }\n\n        var screen = {\n          screen: createWrapper(component, wrapBy, _this3) || _this3.processScene(_child, commonProps, clones) || lightbox && function () {\n            return null;\n          },\n          navigationOptions: createNavigationOptions(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, commonProps), {}, {\n            hideNavBar: parentProps.hideNavBar\n          }, getProperties(component)), _child.props), {}, {\n            init: init,\n            component: component\n          }))\n        };\n        var wrapNavBar = drawer || tabs && !navigator && !renderer || wrap;\n\n        if (wrap === false || commonProps.wrap === false) {\n          wrapNavBar = false;\n        }\n\n        if (component && wrapNavBar) {\n          res[key] = {\n            screen: _this3.processScene({\n              key: key,\n              props: {\n                children: {\n                  key: \"_\" + key,\n                  props: _objectSpread(_objectSpread({}, _child.props), {}, {\n                    wrap: false\n                  })\n                }\n              }\n            }, commonProps, clones, wrapBy),\n            navigationOptions: createNavigationOptions(_objectSpread(_objectSpread(_objectSpread({}, commonProps), _child.props), {}, {\n              hideNavBar: true\n            }))\n          };\n        } else {\n          res[key] = screen;\n        }\n\n        props.init = true;\n\n        if (!_this3[key]) {\n          _this3.isLogical[key] = !!component;\n          _this3[key] = new Function('actions', 'props', 'type', \"return function \" + key.replace(/\\W/g, '_') + \"(params){ actions.execute(type, '\" + key + \"', props, params)}\")(_this3, _objectSpread(_objectSpread({\n            error: ''\n          }, commonProps), props), type);\n        }\n\n        if ((onEnter || on || component && component.onEnter) && !_this3[key + OnEnter]) {\n          _this3[key + OnEnter] = onEnter || on || component.onEnter;\n        }\n\n        if ((onExit || component && component.onExit) && !_this3[key + OnExit]) {\n          _this3[key + OnExit] = onExit || component.onExit;\n        }\n\n        order.push(key);\n\n        if (initial || _child.props.initial || !initialRouteName) {\n          initialRouteName = key;\n          initialRouteParams = _objectSpread(_objectSpread({}, commonProps), props);\n        }\n      }\n\n      var mode = modal ? 'modal' : 'card';\n\n      var navigationConfig = _objectSpread(_objectSpread({\n        lazy: lazy,\n        initialRouteName: initialRouteName,\n        initialRouteParams: initialRouteParams,\n        contentComponent: contentComponent,\n        order: order\n      }, commonProps), {}, {\n        navigationOptions: createNavigationOptions(commonProps)\n      });\n\n      if (navigator) {\n        return navigator(res, navigationConfig);\n      }\n\n      if (renderer) {\n        return tabs ? createTabNavigatorHOC(renderer)(res, navigationConfig) : createStackNavigatorHOC(renderer)(res, navigationConfig);\n      }\n\n      if (lightbox) {\n        return createStackNavigatorHOC(LightboxRenderer)(res, _objectSpread(_objectSpread({\n          mode: mode,\n          initialRouteParams: initialRouteParams,\n          initialRouteName: initialRouteName\n        }, commonProps), {}, {\n          navigationOptions: createNavigationOptions(commonProps)\n        }));\n      }\n\n      if (tabs) {\n        var createTabNavigator = createMaterialTopTabNavigator;\n\n        if (tabBarPosition !== 'top') {\n          createTabNavigator = createBottomTabNavigator;\n        }\n\n        return createTabNavigator(res, _objectSpread(_objectSpread({\n          lazy: lazy,\n          tabBarComponent: tabBarComponent,\n          initialRouteName: initialRouteName,\n          initialRouteParams: initialRouteParams,\n          tabBarPosition: tabBarPosition,\n          order: order\n        }, commonProps), {}, {\n          tabBarOptions: createTabBarOptions(commonProps),\n          navigationOptions: createNavigationOptions(commonProps)\n        }));\n      }\n\n      if (drawer) {\n        var config = _objectSpread({\n          initialRouteName: initialRouteName,\n          contentComponent: contentComponent,\n          order: order,\n          drawerOpenRoute: 'DrawerOpen',\n          drawerCloseRoute: 'DrawerClose',\n          drawerToggleRoute: 'DrawerToggle'\n        }, commonProps);\n\n        if (drawerWidth) {\n          config.drawerWidth = drawerWidth;\n        }\n\n        if (drawerLockMode) {\n          config.drawerLockMode = drawerLockMode;\n        }\n\n        return createDrawerNavigator(res, config);\n      }\n\n      if (overlay) {\n        return createTabNavigatorHOC(OverlayRenderer)(res, _objectSpread(_objectSpread({\n          lazy: lazy,\n          initialRouteName: initialRouteName,\n          contentComponent: contentComponent,\n          initialRouteParams: initialRouteParams,\n          order: order\n        }, commonProps), {}, {\n          tabBarOptions: createTabBarOptions(commonProps),\n          navigationOptions: createNavigationOptions(commonProps)\n        }));\n      }\n\n      return createStackNavigator(res, _objectSpread(_objectSpread({\n        mode: mode,\n        initialRouteParams: initialRouteParams,\n        initialRouteName: initialRouteName\n      }, commonProps), {}, {\n        transitionConfig: transitionConfig,\n        navigationOptions: createNavigationOptions(commonProps)\n      }));\n    };\n\n    this.dispatch = function (action) {\n      if (_this3.externalDispatch) {\n        _this3.externalAction = action;\n\n        _this3.externalDispatch(action);\n      } else if (_this3._navigator) {\n        _this3._navigator.dispatch(action);\n      }\n    };\n\n    this.execute = function (actionType, routeName) {\n      for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        params[_key - 2] = arguments[_key];\n      }\n\n      var res = uniteParams(routeName, params);\n      var overridenType = res.type || actionType;\n      var type = actionMap[overridenType] || overridenType;\n\n      if (type === 'pop') {\n        _this3[type](res);\n      } else {\n        _this3[type](routeName, res);\n      }\n    };\n\n    this.push = function (routeName, data) {\n      var params = filterParam(data);\n\n      _this3.dispatch({\n        type: StackActions.PUSH,\n        routeName: routeName,\n        params: params\n      });\n    };\n\n    this.jump = function (routeName, data) {\n      var params = filterParam(data);\n\n      _this3.dispatch({\n        type: NavigationActions.NAVIGATE,\n        routeName: routeName,\n        params: params\n      });\n    };\n\n    this.drawerOpen = function () {\n      _this3.dispatch(DrawerActions.openDrawer());\n    };\n\n    this.drawerClose = function () {\n      _this3.dispatch(DrawerActions.closeDrawer());\n    };\n\n    this.drawerToggle = function () {\n      _this3.dispatch(DrawerActions.toggleDrawer());\n    };\n\n    this.refresh = function (data) {\n      var sceneKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var params = filterParam(data);\n\n      var _getActiveState = getActiveState(_this3.state),\n          key = _getActiveState.key;\n\n      _this3.dispatch(NavigationActions.setParams({\n        key: sceneKey || key,\n        params: params\n      }));\n    };\n\n    this.pop = function () {\n      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          timeout = _ref5.timeout,\n          key = _ref5.key,\n          params = _objectWithoutProperties(_ref5, [\"timeout\", \"key\"]);\n\n      var res = filterParam(params);\n\n      if (timeout) {\n        setTimeout(function () {\n          return _this3.pop(params);\n        }, timeout);\n      } else {\n        _this3.dispatch(NavigationActions.back({\n          key: key\n        }));\n\n        if (res.refresh) {\n          _this3.refresh(res.refresh);\n        }\n      }\n\n      return true;\n    };\n\n    this.popTo = function (routeName, data) {\n      var params = filterParam(data);\n\n      _this3.dispatch({\n        type: ActionConst.POP_TO,\n        routeName: routeName,\n        params: params\n      });\n    };\n\n    this.popAndPush = function (routeName, data) {\n      var params = filterParam(data);\n\n      _this3.dispatch({\n        type: ActionConst.POP_AND_PUSH,\n        routeName: routeName,\n        params: params\n      });\n    };\n\n    this.replace = function (routeName, data) {\n      var params = filterParam(data);\n\n      _this3.dispatch({\n        type: ActionConst.REPLACE,\n        routeName: routeName,\n        params: params\n      });\n    };\n\n    this.reset = function (routeName, data) {\n      var params = filterParam(data);\n      var parent = getParent(_this3.state, routeName);\n\n      _this3.dispatch(StackActions.reset({\n        index: 0,\n        key: parent ? parent.key : null,\n        actions: [NavigationActions.navigate({\n          routeName: routeName,\n          params: params\n        })]\n      }));\n    };\n  }\n\n  _createClass(NavigationStore, [{\n    key: \"externalState\",\n    set: function set(state) {\n      if (state && this.externalDispatch) {\n        this.onNavigationStateChange(this.state, state, this.externalAction);\n        this.state = state;\n      }\n    }\n  }]);\n\n  return NavigationStore;\n}();\n\nexport { NavigationStore as default };","map":{"version":3,"sources":["/home/muneeb/E-Photocopier/Client/node_modules/react-native-router-flux/src/Store.js"],"names":["React","createAppContainer","NavigationActions","StackActions","createStackNavigator","createDrawerNavigator","DrawerActions","createMaterialTopTabNavigator","createBottomTabNavigator","PropTypes","createReducer","ActionConst","OnEnter","OnExit","assert","LeftButton","RightButton","BackButton","LightboxRenderer","_drawerImage","getActiveState","getParent","getRouteNameByKey","Modal","Lightbox","Drawer","Tabs","Overlay","OverlayRenderer","createStackNavigatorHOC","createTabNavigatorHOC","RightNavBarButton","LeftNavBarButton","BackNavBarButton","counter","actionMap","JUMP","PUSH","REPLACE","BACK","BACK_ACTION","POP_TO","REFRESH","RESET","PUSH_OR_POP","reservedKeys","dontInheritKeys","getValue","value","params","Function","getProperties","component","res","key","children","createTabBarOptions","tabBarStyle","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","labelStyle","tabStyle","props","style","createNavigationOptions","type","cardStyle","back","backButtonImage","backButtonTextStyle","backTitle","backTitleEnabled","backToInitial","drawerIcon","drawerImage","drawerPosition","getTitle","headerLayoutPreset","headerStyle","headerTitleStyle","hideDrawerButton","hideNavBar","hideTabBar","icon","init","left","leftButton","leftButtonImage","leftButtonTextStyle","leftTitle","navBar","navBarButtonColor","navigationBarStyle","navigationBarTitleImage","navigationBarTitleImageStyle","navTransparent","onLeft","onRight","panHandlers","renderBackButton","renderNavigationBar","renderTitle","right","rightButton","rightButtonImage","rightButtonTextStyle","rightTitle","tabBarIcon","tabBarLabel","title","titleStyle","NavBar","navigationOptions","navigation","screenProps","navigationParams","state","animationEnabled","headerBackImage","headerBackTitle","headerBackTitleEnabled","headerLeft","renderLeftButton","headerRight","renderRightButton","headerTintColor","tintColor","headerTitle","NavBarFromParams","header","data","gesturesEnabled","Icon","componentData","routeParams","routes","index","tabBarVisible","headerTransparent","userDefinedTabBarOnPress","tabBarOnPress","console","warn","dispatch","popToTop","defaultHandler","originalRouteName","routeName","startsWith","substring","isStatelessComponent","Component","prototype","render","extendProps","store","transition","indexOf","charAt","Object","keys","createWrapper","wrapBy","wrapper","Wrapped","onRef","bind","ref","addRef","onEnter","deleteRef","onExit","propTypes","shape","isRequired","StatelessWrapped","filterParam","toString","proto","constructor","name","uniteParams","param","defaultSuccess","defaultFailure","NavigationStore","getStateForAction","reducer","_navigator","externalDispatch","externalState","prevState","externalAction","refs","states","isLogical","setCustomReducer","Navigator","router","cmd","onEnterHandler","currentScene","handler","success","failure","currentParams","error","message","onExitHandler","prevScene","exitHandler","Promise","then","e","onNavigationStateChange","currentState","action","activeState","setTimeout","FOCUS","onStateChange","setTopLevelNavigator","navigatorRef","create","scene","Array","isArray","processScene","createAction","args","inheritProps","clones","order","navigator","renderer","contentComponent","drawerWidth","drawerLockMode","tabBarPosition","lazy","duration","parentProps","tabs","modal","lightbox","overlay","drawer","transitionConfig","tabBarComponent","undefined","transitionSpec","timing","Animated","easing","Easing","step0","commonProps","pkey","includes","concat","push","child","clone","initialRouteName","initialRouteParams","path","on","wrap","initial","screen","wrapNavBar","replace","mode","navigationConfig","createTabNavigator","tabBarOptions","config","drawerOpenRoute","drawerCloseRoute","drawerToggleRoute","execute","actionType","overridenType","jump","NAVIGATE","drawerOpen","openDrawer","drawerClose","closeDrawer","drawerToggle","toggleDrawer","refresh","sceneKey","setParams","pop","timeout","popTo","popAndPush","POP_AND_PUSH","reset","parent","actions","navigate"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Image, Animated, Easing } from 'react-native';\nimport { createAppContainer, NavigationActions, StackActions } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createDrawerNavigator, DrawerActions } from 'react-navigation-drawer';\nimport { createMaterialTopTabNavigator, createBottomTabNavigator } from 'react-navigation-tabs';\nimport PropTypes from 'prop-types';\nimport createReducer from './Reducer';\nimport * as ActionConst from './ActionConst';\nimport { OnEnter, OnExit, assert } from './Util';\nimport { LeftButton, RightButton, BackButton } from './NavBar';\nimport LightboxRenderer from './LightboxRenderer';\nimport _drawerImage from '../images/menu_burger.png';\nimport { getActiveState, getParent, getRouteNameByKey } from './State';\nimport Modal from './Modal';\nimport Lightbox from './Lightbox';\nimport Drawer from './Drawer';\nimport Tabs from './Tabs';\nimport Overlay from './Overlay';\nimport OverlayRenderer from './OverlayRenderer';\nimport createStackNavigatorHOC from './createStackNavigatorHOC';\nimport createTabNavigatorHOC from './createTabNavigatorHOC';\n\nlet RightNavBarButton;\nlet LeftNavBarButton;\nlet BackNavBarButton;\nlet counter = 0;\n\nexport const actionMap = {\n  [ActionConst.JUMP]: 'jump',\n  [ActionConst.PUSH]: 'push',\n  [ActionConst.REPLACE]: 'replace',\n  [ActionConst.BACK]: 'pop',\n  [ActionConst.BACK_ACTION]: 'pop',\n  [ActionConst.POP_TO]: 'popTo',\n  [ActionConst.REFRESH]: 'refresh',\n  [ActionConst.RESET]: 'reset',\n  [ActionConst.PUSH_OR_POP]: 'push',\n};\n\nconst reservedKeys = [\n  'addRef',\n  'back',\n  'children',\n  'create',\n  'dispatch',\n  'drawerClose',\n  'drawerOpen',\n  'execute',\n  'left',\n  'leftButton',\n  'navBar',\n  'navigate',\n  'on',\n  'onEnter',\n  'onExit',\n  'onLeft',\n  'onRight',\n  'pop',\n  'popTo',\n  'push',\n  'refresh',\n  'refs',\n  'removeRef',\n  'renderLeftButton',\n  'renderRightButton',\n  'renderTitle',\n  'replace',\n  'right',\n  'rightButton',\n  'run',\n  'setParams',\n  'title',\n];\n\nconst dontInheritKeys = [\n  'backToInitial',\n  'children',\n  'component',\n  'contentComponent',\n  'drawer',\n  'hideNavBar',\n  'hideTabBar',\n  'key',\n  'lightbox',\n  'modal',\n  'navigator',\n  'navTransparent',\n  'overlay',\n  'ref',\n  'style',\n  'tabBarComponent',\n  'tabs',\n  'title',\n  'type',\n];\n\nfunction getValue(value, params) {\n  return value instanceof Function ? value(params) : value;\n}\n\nfunction getProperties(component = {}) {\n  const res = {};\n  for (const key of reservedKeys) {\n    if (component[key]) {\n      res[key] = component[key];\n    }\n  }\n  delete res.children;\n  return res;\n}\nfunction createTabBarOptions({\n  tabBarStyle, activeTintColor, inactiveTintColor, activeBackgroundColor, inactiveBackgroundColor, showLabel, labelStyle, tabStyle, ...props\n}) {\n  return {\n    ...props,\n    style: tabBarStyle,\n    activeTintColor,\n    inactiveTintColor,\n    activeBackgroundColor,\n    inactiveBackgroundColor,\n    showLabel,\n    labelStyle,\n    tabStyle,\n  };\n}\nfunction createNavigationOptions(params) {\n  const {\n    type,\n    cardStyle,\n    back,\n    backButtonImage,\n    backButtonTextStyle,\n    backTitle,\n    backTitleEnabled,\n    backToInitial,\n    component,\n    drawerIcon,\n    drawerImage,\n    drawerPosition,\n    getTitle,\n    headerLayoutPreset,\n    headerStyle,\n    headerTitleStyle,\n    hideDrawerButton,\n    hideNavBar,\n    hideTabBar,\n    icon,\n    init,\n    left,\n    leftButton,\n    leftButtonImage,\n    leftButtonTextStyle,\n    leftTitle,\n    navBar,\n    navBarButtonColor,\n    navigationBarStyle,\n    navigationBarTitleImage,\n    navigationBarTitleImageStyle,\n    navTransparent,\n    onLeft,\n    onRight,\n    panHandlers,\n    renderBackButton,\n    renderNavigationBar,\n    renderTitle,\n    right,\n    rightButton,\n    rightButtonImage,\n    rightButtonTextStyle,\n    rightTitle,\n    tabBarIcon,\n    tabBarLabel,\n    title,\n    titleStyle,\n    ...props\n  } = params;\n  const NavBar = renderNavigationBar || navBar;\n  if (component && component.navigationOptions) {\n    return component.navigationOptions;\n  }\n  return ({ navigation, screenProps }) => {\n    const navigationParams = navigation.state.params || {};\n    const state = {\n      navigation,\n      ...params,\n      ...navigationParams,\n      ...screenProps,\n    };\n    const res = {\n      animationEnabled: !(type === ActionConst.REPLACE || type === 'replace'  || type === ActionConst.RESET || type === 'reset'),\n      ...props,\n      cardStyle: navigationParams.cardStyle || cardStyle,\n      headerBackImage: navigationParams.backButtonImage || backButtonImage,\n      headerBackTitle: getValue(navigationParams.backTitle || backTitle, state),\n      headerBackTitleEnabled: navigationParams.backTitleEnabled || backTitleEnabled,\n      headerLayoutPreset: navigationParams.headerLayoutPreset || headerLayoutPreset,\n      headerLeft: () => getValue(navigationParams.left || left || leftButton || params.renderLeftButton, state),\n      headerRight: () => getValue(navigationParams.right || right || rightButton || params.renderRightButton, state),\n      headerStyle: getValue(navigationParams.headerStyle || headerStyle || navigationBarStyle, state),\n      headerTintColor: navBarButtonColor || props.tintColor || navigationParams.tintColor || navigationParams.headerTintColor,\n      headerTitle: getValue(navigationParams.renderTitle || renderTitle || params.renderTitle, state),\n      headerTitleStyle: headerTitleStyle || titleStyle,\n      title: getValue(navigationParams.title || title || getTitle, state),\n    };\n\n    const NavBarFromParams = navigationParams.renderNavigationBar || navigationParams.navBar;\n    if (NavBarFromParams != null) {\n      if (NavBarFromParams) {\n        res.header = data => <NavBarFromParams navigation={navigation} {...state} {...data} />;\n      }\n    } else if (NavBar) {\n      res.header = data => <NavBar navigation={navigation} {...state} {...data} />;\n    }\n\n    if (typeof navigationParams.panHandlers !== 'undefined') {\n      if (navigationParams.panHandlers === null) {\n        res.gesturesEnabled = false;\n      }\n    } else if (panHandlers === null) {\n      res.gesturesEnabled = false;\n    }\n\n    if (navigationBarTitleImage) {\n      res.headerTitle = <Image source={navigationBarTitleImage} style={navigationBarTitleImageStyle} />;\n    }\n\n    if (tabBarLabel) {\n      res.tabBarLabel = tabBarLabel;\n    }\n\n    if (tabBarIcon || icon) {\n      const Icon = tabBarIcon || icon;\n      res.tabBarIcon = data => <Icon {...state} {...data} />;\n    }\n    const componentData = {};\n    // copy all component static functions\n    if (component) {\n      for (const key of [\n        'onRight',\n        'onLeft',\n        'rightButton',\n        'leftButton',\n        'leftTitle',\n        'rightTitle',\n        'rightButtonImage',\n        'leftButtonImage',\n        'rightButtonTextStyle',\n        'leftButtonTextStyle',\n        'rightButtonIconStyle',\n        'leftButtonIconStyle',\n        'leftButtonTintColor',\n        'rightButtonTintColor',\n      ]) {\n        if (component[key]) {\n          componentData[key] = component[key];\n        }\n      }\n    }\n\n    if (\n      rightButtonImage\n      || rightTitle\n      || params.renderRightButton\n      || onRight\n      || navigationParams.onRight\n      || navigationParams.rightTitle\n      || navigationParams.rightButtonImage\n      || rightButtonTextStyle\n      || ((drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition === 'right')\n    ) {\n      res.headerRight = () => getValue(navigationParams.right || navigationParams.rightButton || params.renderRightButton, { ...navigationParams, ...screenProps }) || (\n        <RightNavBarButton navigation={navigation} {...params} {...navigationParams} {...componentData} />\n      );\n    }\n\n    if (\n      leftButtonImage\n      || backButtonImage\n      || backTitle\n      || leftTitle\n      || params.renderLeftButton\n      || leftButtonTextStyle\n      || renderBackButton\n      || backButtonTextStyle\n      || onLeft\n      || navigationParams.leftTitle\n      || navigationParams.onLeft\n      || navigationParams.leftButtonImage\n      || navigationParams.backButtonImage\n      || navigationParams.backTitle\n      || ((drawerImage || drawerIcon) && !hideDrawerButton && drawerPosition !== 'right')\n    ) {\n      const leftButton = navigationParams.left || navigationParams.leftButton || params.renderLeftButton;\n      res.headerLeft = () => getValue(leftButton, { ...params, ...navigationParams, ...screenProps })\n        || (((onLeft && (leftTitle || navigationParams.leftTitle || leftButtonImage || navigationParams.leftButtonImage)) || drawerImage || drawerIcon) && (\n          <LeftNavBarButton navigation={navigation} {...params} {...navigationParams} {...componentData} />\n        ))\n        || res.headerLeft\n        || (init ? null : (!leftButton && renderBackButton && renderBackButton(state)) || (!leftButton && <BackNavBarButton navigation={navigation} {...state} />))\n        || null;\n    }\n\n    if (back) {\n      res.headerLeft = (renderBackButton && renderBackButton(state)) || (() => <BackNavBarButton navigation={navigation} {...state} />);\n    }\n\n    if (typeof navigationParams.left !== 'undefined' || typeof navigationParams.leftButton !== 'undefined' || typeof navigationParams.renderLeftButton !== 'undefined') {\n      if (navigationParams.left === null || navigationParams.leftButton === null || navigationParams.renderLeftButton === null) {\n        res.headerLeft = null;\n      }\n    }\n\n    // currect dynamic navigation params has priority over static scene params\n    // but taking them into account only if they are explicitly set (not null or undefined)\n    const routeParams = navigation.state.routes && navigation.state.routes[navigation.state.index].params;\n    if (navigationParams.hideTabBar != null) {\n      if (navigationParams.hideTabBar) {\n        res.tabBarVisible = false;\n      }\n    } else if (hideTabBar) {\n      res.tabBarVisible = false;\n    } else if (routeParams && routeParams.hideTabBar) {\n      res.tabBarVisible = false;\n    }\n\n    if (navigationParams.hideNavBar != null) {\n      if (navigationParams.hideNavBar) {\n        res.header = null;\n      }\n    } else if (hideNavBar) {\n      res.header = null;\n    }\n\n    if (navTransparent) {\n      res.headerTransparent = true;\n      res.headerStyle = {};\n    }\n\n    if (backToInitial) {\n      const userDefinedTabBarOnPress = res.tabBarOnPress;\n      res.tabBarOnPress = (data) => {\n        if (userDefinedTabBarOnPress) {\n          console.warn('backToInitial and tabBarOnPress were both defined and might cause unexpected navigation behaviors. I hope you know what you are doing ;-)');\n          userDefinedTabBarOnPress(data);\n        }\n        if (data.navigation && data.navigation.state.index !== 0) {\n          data.navigation.dispatch(StackActions.popToTop());\n        } else {\n          data.defaultHandler();\n        }\n      };\n    }\n    return res;\n  };\n}\nfunction originalRouteName(routeName) {\n  if (routeName.startsWith('_')) {\n    return routeName.substring(1);\n  }\n  return routeName;\n}\nfunction isStatelessComponent(Component) {\n  return !Component.prototype || typeof Component.prototype.render !== 'function';\n}\nfunction extendProps(props, store: NavigationStore) {\n  if (!props) {\n    return {};\n  }\n  const res = { ...props };\n  for (const transition of Object.keys(props)) {\n    if (\n      reservedKeys.indexOf(transition) === -1\n      && transition.startsWith('on')\n      && transition.charAt(2) >= 'A'\n      && transition.charAt(2) <= 'Z'\n      && typeof props[transition] === 'string'\n    ) {\n      if (store[props[transition]]) {\n        res[transition] = params => store[props[transition]](params);\n      }\n    }\n  }\n  return res;\n}\n// eslint no-param-reassign: \"error\"\nfunction createWrapper(Component, wrapBy, store: NavigationStore) {\n  if (!Component) {\n    return null;\n  }\n  const wrapper = wrapBy || (props => props);\n\n  // detect if the component is not functional stateless\n  // not sure if Component can be string-defined (\"div\") here\n  // may be there is a better way to detect stateless function component, but this should work\n  if (!isStatelessComponent(Component)) {\n    class Wrapped extends React.Component {\n      static propTypes = {\n        navigation: PropTypes.shape().isRequired,\n      };\n\n      constructor() {\n        super();\n        this.onRef = this.onRef.bind(this);\n      }\n\n      componentDidMount() {\n        const { navigation } = this.props;\n        if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n          store.addRef(originalRouteName(navigation.state.routeName), this.ref);\n        }\n        if (this.ref && this.ref.onEnter) {\n          this.ref.onEnter(navigation && navigation.state);\n        }\n      }\n\n      componentWillUnmount() {\n        const { navigation } = this.props;\n        if (this.ref && navigation && navigation.state && navigation.state.routeName) {\n          store.deleteRef(originalRouteName(navigation.state.routeName));\n        }\n        if (this.ref && this.ref.onExit) {\n          this.ref.onExit(navigation && navigation.state);\n        }\n        this.ref = null;\n      }\n\n      onRef(ref) {\n        this.ref = ref;\n      }\n\n      render() {\n        const { navigation } = this.props;\n        if (!navigation || !navigation.state) {\n          return <Component ref={this.onRef} {...this.props} />;\n        }\n        return <Component ref={this.onRef} {...this.props} {...extendProps(navigation.state.params, store)} name={navigation.state.routeName} />;\n      }\n    }\n    return wrapper(Wrapped);\n  }\n\n  // if component is statless function, ref is not supported\n  function StatelessWrapped({ navigation, ...props }) {\n    return <Component {...props} navigation={navigation} {...extendProps(navigation.state.params, store)} name={navigation.state.routeName} />;\n  }\n  StatelessWrapped.propTypes = {\n    navigation: PropTypes.shape().isRequired,\n  };\n  return wrapper(StatelessWrapped);\n}\n\nfunction filterParam(data = {}) {\n  if (data.toString() !== '[object Object]') {\n    return { data };\n  }\n  const proto = (data || {}).constructor.name;\n  // avoid passing React Native parameters\n  if (!data || proto !== 'Object') {\n    return {};\n  }\n  return data;\n}\n\nfunction uniteParams(routeName, params) {\n  let res = {};\n  for (const param of params) {\n    if (param) {\n      res = { ...res, ...filterParam(param) };\n    }\n  }\n  res.routeName = routeName;\n  return res;\n}\n\nconst defaultSuccess = () => {};\nconst defaultFailure = () => {};\n\nexport default class NavigationStore {\n  getStateForAction = null;\n\n  reducer = null;\n\n  _navigator = null;\n\n  externalDispatch = null;\n\n  externalState = null;\n\n  prevState = null;\n\n  externalAction = {};\n\n  refs = {};\n\n  states = {};\n\n  isLogical = {};\n\n  currentScene;\n\n  prevScene;\n\n  currentParams;\n\n  onStateChange;\n\n  set externalState(state) {\n    if (state && this.externalDispatch) {\n      this.onNavigationStateChange(this.state, state, this.externalAction);\n      this.state = state;\n    }\n  }\n\n  setCustomReducer = (Navigator) => {\n    this.getStateForAction = Navigator.router.getStateForAction;\n    const reducer = createReducer(this);\n    Navigator.router.getStateForAction = (cmd, state) => (this.reducer ? this.reducer(state, cmd) : reducer(state, cmd));\n  };\n\n  onEnterHandler = async (currentScene) => {\n    if (this.states[currentScene]) {\n      const handler = this[currentScene + OnEnter];\n      const success = this.states[currentScene].success || defaultSuccess;\n      const failure = this.states[currentScene].failure || defaultFailure;\n      if (handler) {\n        try {\n          const res = await handler(this.currentParams, this.state);\n          if (res) {\n            success(res);\n          } else {\n            failure();\n          }\n        } catch (e) {\n          failure({ error: e.message });\n        }\n      }\n    }\n  };\n\n  onExitHandler = (prevScene) => {\n    if (prevScene) {\n      const exitHandler = this[prevScene + OnExit];\n      if (exitHandler) {\n        try {\n          const res = exitHandler(this.state);\n          if (res instanceof Promise) {\n            res.then(defaultSuccess, defaultFailure);\n          }\n        } catch (e) {\n          console.error('Error during onExit handler:', e);\n        }\n      }\n    }\n  };\n\n  onNavigationStateChange = async (prevState, currentState, action) => {\n    this.state = currentState;\n    this.prevState = prevState;\n    const activeState = getActiveState(this.state);\n    const currentScene = activeState.routeName;\n    this.currentParams = { ...activeState.params, ...action.params };\n    this.currentScene = currentScene;\n    this.prevScene = this.prevState ? getActiveState(this.prevState).routeName : null;\n    if (this.currentScene !== this.prevScene) {\n      // run onExit for old scene\n      this.onExitHandler(this.prevScene);\n      setTimeout(() => this.dispatch({\n        type: ActionConst.FOCUS,\n        routeName: this.currentScene,\n        params: this.currentParams,\n      }));\n      this.onEnterHandler(currentScene);\n    } else {\n      const routeName = getRouteNameByKey(this.state, action.key);\n      if (action.type === 'Navigation/DRAWER_OPENED') {\n        this.onEnterHandler(routeName);\n      } else if (action.type === 'Navigation/DRAWER_CLOSED') {\n        this.onExitHandler(routeName);\n      }\n    }\n    if (this.onStateChange) {\n      this.onStateChange(prevState, currentState, action);\n    }\n  };\n\n  setTopLevelNavigator = (navigatorRef) => {\n    this._navigator = navigatorRef;\n  };\n\n  addRef = (name, ref) => {\n    this.refs[name] = ref;\n  };\n\n  deleteRef = (name) => {\n    delete this.refs[name];\n  };\n\n  create = (scene: Scene, params = {}, wrapBy = props => props) => {\n    assert(!Array.isArray(scene), 'Router should contain only one scene, please wrap your scenes with root Scene ');\n    RightNavBarButton = wrapBy(RightButton);\n    LeftNavBarButton = wrapBy(LeftButton);\n    BackNavBarButton = wrapBy(BackButton);\n    const Navigator = this.processScene(scene, params, [], wrapBy);\n    // set initial state\n    this.onNavigationStateChange(null, Navigator.router.getStateForAction(NavigationActions.init()), NavigationActions.init());\n    this.setCustomReducer(Navigator);\n\n    return createAppContainer(Navigator);\n  };\n\n  createAction = name => (args) => {\n    // console.log(`Transition to state=${name}`);\n    if (this.isLogical[name]) {\n      this[name](args);\n    } else {\n      setTimeout(() => this[name](args));\n    }\n  };\n\n  processScene = (scene: Scene, inheritProps = {}, clones = [], wrapBy) => {\n    assert(scene.props, 'props should be defined');\n    if (!scene.props.children) {\n      return null;\n    }\n    const res = {};\n    const order = [];\n    const {\n      navigator, renderer, contentComponent, drawerWidth, drawerLockMode, tabBarPosition, lazy, duration, ...parentProps\n    } = scene.props;\n    let {\n      tabs, modal, lightbox, overlay, drawer, transitionConfig, tabBarComponent,\n    } = parentProps;\n    if (scene.type === Modal) {\n      modal = true;\n    } else if (scene.type === Drawer) {\n      drawer = true;\n    } else if (scene.type === Lightbox) {\n      lightbox = true;\n    } else if (scene.type === Tabs) {\n      tabs = true;\n    } else if (scene.type === Overlay) {\n      overlay = true;\n    }\n\n    if (duration !== undefined && !transitionConfig) {\n      transitionConfig = () => ({\n        transitionSpec: {\n          duration,\n          timing: Animated.timing,\n          easing: Easing.step0,\n        },\n      });\n    }\n\n    const commonProps = { ...inheritProps, ...parentProps };\n    delete commonProps.children;\n    delete commonProps.component;\n    // add inherit props\n    for (const pkey of Object.keys(commonProps)) {\n      if (dontInheritKeys.includes(pkey) && (pkey === 'type' || pkey === 'hideNavBar' || !parentProps[pkey])) {\n        delete commonProps[pkey];\n      }\n    }\n\n    if (drawer) {\n      commonProps.drawerImage = commonProps.drawerImage || _drawerImage;\n    }\n\n    const children = !Array.isArray(parentProps.children) ? [parentProps.children] : [].concat(...parentProps.children);\n    // add clone scenes\n    if (!drawer && !tabs && !overlay) {\n      children.push(...clones);\n    }\n    // add all clones\n    for (const child of children) {\n      if (child && child.props.clone) {\n        if (clones.indexOf(child) === -1) {\n          clones.push(child);\n        }\n      }\n    }\n    let initialRouteName;\n    let initialRouteParams;\n    for (const child of children) {\n      // allow null/false child, useful for conditionals\n      if (!child) {\n        continue;\n      }\n      const key = child.key || `key${(counter += 1)}`;\n      const init = key === children[0].key;\n      assert(reservedKeys.indexOf(key) === -1, `Scene name cannot be reserved word: ${child.key}`);\n      const {\n        component, type = tabs || drawer ? 'jump' : 'push', path, onEnter, onExit, on, failure, success, wrap, initial = false, ...props\n      } = child.props;\n      if (!this.states[key]) {\n        this.states[key] = {};\n      }\n      for (const transition of Object.keys(props)) {\n        if (reservedKeys.indexOf(transition) === -1 && props[transition] instanceof Function) {\n          this.states[key][transition] = props[transition];\n        }\n      }\n      delete props.children;\n      if (success) {\n        this.states[key].success = success instanceof Function ? success : this.createAction(success);\n      }\n      if (failure) {\n        this.states[key].failure = failure instanceof Function ? failure : this.createAction(failure);\n      }\n      if (path) {\n        this.states[key].path = path;\n      }\n      // console.log(`KEY ${key} LEGACY {legacy} PATH ${path} DRAWER ${drawer} TABS ${tabs} WRAP ${wrap}`, JSON.stringify(commonProps));\n      const screen = {\n        screen: createWrapper(component, wrapBy, this) || this.processScene(child, commonProps, clones) || (lightbox && (() => null)),\n        navigationOptions: createNavigationOptions({\n          ...commonProps,\n          hideNavBar: parentProps.hideNavBar,\n          ...getProperties(component),\n          ...child.props,\n          init,\n          component,\n        }),\n      };\n\n      // wrap component inside own navbar for tabs/drawer parent controllers\n      // don't wrap child scenes for custom navigators/renderers\n      let wrapNavBar = drawer || (tabs && !navigator && !renderer) || wrap;\n      if (wrap === false || commonProps.wrap === false) {\n        wrapNavBar = false;\n      }\n      if (component && wrapNavBar) {\n        res[key] = {\n          screen: this.processScene(\n            {\n              key,\n              props: {\n                children: {\n                  key: `_${key}`,\n                  props: { ...child.props, wrap: false },\n                },\n              },\n            },\n            commonProps,\n            clones,\n            wrapBy,\n          ),\n          navigationOptions: createNavigationOptions({\n            ...commonProps,\n            ...child.props,\n            hideNavBar: true,\n          }),\n        };\n      } else {\n        res[key] = screen;\n      }\n\n      // a bit of magic, create all 'actions'-shortcuts inside navigationStore\n      props.init = true;\n      if (!this[key]) {\n        this.isLogical[key] = !!component;\n        this[key] = new Function(\n          'actions',\n          'props',\n          'type',\n          `return function ${\n            key.replace(/\\W/g, '_') // eslint-disable-line no-new-func\n          }(params){ actions.execute(type, '${key}', props, params)}`,\n        )(this, { error: '', ...commonProps, ...props }, type);\n      }\n\n      if ((onEnter || on || (component && component.onEnter)) && !this[key + OnEnter]) {\n        this[key + OnEnter] = onEnter || on || component.onEnter;\n      }\n\n      if ((onExit || (component && component.onExit)) && !this[key + OnExit]) {\n        this[key + OnExit] = onExit || component.onExit;\n      }\n\n      order.push(key);\n      if (initial || child.props.initial || !initialRouteName) {\n        initialRouteName = key;\n        initialRouteParams = { ...commonProps, ...props };\n      }\n    }\n    const mode = modal ? 'modal' : 'card';\n    const navigationConfig = {\n      lazy,\n      initialRouteName,\n      initialRouteParams,\n      contentComponent,\n      order,\n      ...commonProps,\n      navigationOptions: createNavigationOptions(commonProps),\n    };\n    if (navigator) {\n      return navigator(res, navigationConfig);\n    }\n    if (renderer) {\n      return tabs ? createTabNavigatorHOC(renderer)(res, navigationConfig) : createStackNavigatorHOC(renderer)(res, navigationConfig);\n    }\n    if (lightbox) {\n      return createStackNavigatorHOC(LightboxRenderer)(res, {\n        mode,\n        initialRouteParams,\n        initialRouteName,\n        ...commonProps,\n        navigationOptions: createNavigationOptions(commonProps),\n      });\n    }\n\n    if (tabs) {\n      let createTabNavigator = createMaterialTopTabNavigator;\n      if (tabBarPosition !== 'top') {\n        createTabNavigator = createBottomTabNavigator;\n      }\n\n      return createTabNavigator(res, {\n        lazy,\n        tabBarComponent,\n        initialRouteName,\n        initialRouteParams,\n        tabBarPosition,\n        order,\n        ...commonProps,\n        tabBarOptions: createTabBarOptions(commonProps),\n        navigationOptions: createNavigationOptions(commonProps),\n      });\n    }\n\n    if (drawer) {\n      const config = {\n        initialRouteName,\n        contentComponent,\n        order,\n        drawerOpenRoute: 'DrawerOpen',\n        drawerCloseRoute: 'DrawerClose',\n        drawerToggleRoute: 'DrawerToggle',\n        ...commonProps,\n      };\n      if (drawerWidth) {\n        config.drawerWidth = drawerWidth;\n      }\n      if (drawerLockMode) {\n        config.drawerLockMode = drawerLockMode;\n      }\n      return createDrawerNavigator(res, config);\n    }\n\n    if (overlay) {\n      return createTabNavigatorHOC(OverlayRenderer)(res, {\n        lazy,\n        initialRouteName,\n        contentComponent,\n        initialRouteParams,\n        order,\n        ...commonProps,\n        tabBarOptions: createTabBarOptions(commonProps),\n        navigationOptions: createNavigationOptions(commonProps),\n      });\n    }\n    return createStackNavigator(res, {\n      mode,\n      initialRouteParams,\n      initialRouteName,\n      ...commonProps,\n      transitionConfig,\n      navigationOptions: createNavigationOptions(commonProps),\n    });\n  };\n\n  dispatch = (action) => {\n    if (this.externalDispatch) {\n      this.externalAction = action;\n      this.externalDispatch(action);\n    } else if (this._navigator) {\n      this._navigator.dispatch(action);\n    }\n  };\n\n  execute = (actionType, routeName, ...params) => {\n    const res = uniteParams(routeName, params);\n    const overridenType = res.type || actionType;\n    const type = actionMap[overridenType] || overridenType;\n    if (type === 'pop') {\n      this[type](res);\n    } else {\n      this[type](routeName, res);\n    }\n  };\n\n  push = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: StackActions.PUSH, routeName, params });\n  };\n\n  jump = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: NavigationActions.NAVIGATE, routeName, params });\n  };\n\n  drawerOpen = () => {\n    this.dispatch(DrawerActions.openDrawer());\n  };\n\n  drawerClose = () => {\n    this.dispatch(DrawerActions.closeDrawer());\n  };\n\n  drawerToggle = () => {\n    this.dispatch(DrawerActions.toggleDrawer());\n  };\n\n  refresh = (data, sceneKey = null) => {\n    const params = filterParam(data);\n    const { key } = getActiveState(this.state);\n    this.dispatch(\n      NavigationActions.setParams({\n        key: sceneKey || key,\n        params,\n      }),\n    );\n  };\n\n  pop = ({ timeout, key, ...params } = {}) => {\n    const res = filterParam(params);\n    if (timeout) {\n      setTimeout(() => this.pop(params), timeout);\n    } else {\n      this.dispatch(NavigationActions.back({ key }));\n      if (res.refresh) {\n        this.refresh(res.refresh);\n      }\n    }\n    return true;\n  };\n\n  popTo = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: ActionConst.POP_TO, routeName, params });\n  };\n\n  popAndPush = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: ActionConst.POP_AND_PUSH, routeName, params });\n  };\n\n  replace = (routeName, data) => {\n    const params = filterParam(data);\n    this.dispatch({ type: ActionConst.REPLACE, routeName, params });\n  };\n\n  reset = (routeName, data) => {\n    const params = filterParam(data);\n    const parent = getParent(this.state, routeName);\n    this.dispatch(\n      StackActions.reset({\n        index: 0,\n        key: parent ? parent.key : null,\n        actions: [\n          NavigationActions.navigate({\n            routeName,\n            params,\n          }),\n        ],\n      }),\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}